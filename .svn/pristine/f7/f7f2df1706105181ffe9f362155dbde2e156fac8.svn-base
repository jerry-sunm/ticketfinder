<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ticket.finder.mapper.TfOrderMapper">
	<insert id="insertOrder">
		insert into tf_order values(#{orderCode}, sysdate, #{orderViewDate}, #{orderEpi}, #{orderPrice}, #{orderSeat}, #{orderShowCode}, #{orderFcCode}, #{orderHallCode}, #{orderGrade}, #{orderFees}, #{orderShipfees}, 
		#{orderReceipt}, #{orderUserId}, #{orderUserName}, #{orderPayment}, #{orderQty}, #{orderDpState}, null, #{orderShippingNum}, #{orderShowName}, #{orderTicketing})
	</insert>
	
	<!-- USER : 미입금 → 취소, 입금 → 환불 -->
	<!-- ADMIN : 미입금 → 입금 -->
	<update id="updateDpOrder">
		update tf_order set order_dp_state=#{orderDpState} where order_code=#{orderCode}
	</update>
	
	<!-- null → 배송중 → 배송완료  처리 -->
	<update id="updateShOrder">
		update tf_order set order_shipping_num=#{orderShippingNum}, order_sh_state=#{orderShState} where order_code=#{orderCode}
	</update>
	
	<!-- 입금된 티켓 발권 -->
	<update id="ticketing">
		update tf_order set order_ticketing=#{orderTicketing} where order_code=#{orderCode}
	</update>
	
	<!-- 취소신청 → 취소완료(미입금주문일시 바로 취소상태로 변경) 환불신청 → 환불완료 -->
	<update id="updateStateRefund">
		update tf_order set order_dp_state='환불' where order_code=#{orderCode}
	</update>

	<!-- 미입금 주문 취소 -->
	<delete id="deleteUnpaidOrder">
		delete from tf_order where order_code=#{orderCode}
	</delete>
	
	<!-- 주문 조회 -->
	<select id="selectOrder" resultType="TfOrder">
		select * from tf_order where order_code=#{orderCode}
	</select>
	
	<!-- 내 주문내역 조회 - 동적SQL로 검색날짜 유무에 따라 where절 다르게 -->
	<select id="selectUserOrderAll" resultType="TfOrder">
		select * from (select rownum rn, user_order.* (select * from tf_order where order_user_id = #{userId} 
        and order_date between #{startDate} and #{endDate} order by order_date desc) user_order) 
        where rn between #{startRn} and #{endRn}
	</select>
	
	<!-- 내 주문내역 조회 -->
	<select id="selectMyOrder" resultType="TfOrder">
		select * from tf_order where order_code = #{orderCode} and order_user_id = #{userId}
	</select>
	
	<!-- 날짜 범위 주문 조회 -->
	<select id="selectDateOrder" resultType="TfOrder">
		select * from tf_order where order_date between #{startDate} and TO_DATE(#{endDate})+1 order by order_date
	</select>
	
	<!-- 예매건수 20위 랭킹 -->
	<select id="selectRankOrder" resultType="TfOrder">
		<![CDATA[
			select * from (select rownum rn, osc.* from (select order_show_num, count(*) from tf_order where order_date 
			between to_date(#{startDate}, 'yyyy/mm/dd') and to_date(#{endDate}, 'yyyy/mm/dd') 
			group by order_show_num order by count(*) desc) 
			osc) where rn<=20
		]]>
	</select>
	
	<!-- 모든 주문 조회 -->
	<select id="selectOrderList" resultType="TfOrder">
		select * from tf_order order by order_date desc
	</select>
	
	<!-- 미입금 주문 조회 -->
	<select id="selectUnpaidOrderList" resultType="TfOrder">
		select * from tf_order where order_dp_state='미입금' order by order_date desc
	</select>
	
	<!-- 미발송 주문 조회 -->
	<select id="selectShOrderList" resultType="TfOrder">
		select * from tf_order where order_sh_state='미발송' and order_dp_state='입금' order by order_date desc
	</select>
	
	<!-- 미발권 주문 조회 -->
	<select id="selectTicketingList" resultType="TfOrder">
		select * from tf_order where order_ticketing='미발권' and order_dp_state='입금' order by order_date desc
	</select>
	
	<!-- 주문 취소 요청목록 출력 -->
	<select id="selectCancelOrderList" resultType="TfOrder">
		select * from tf_order where order_state='취소' order by order_date desc
	</select>
	
	<!-- 예매 건수 검색 -->
	<select id="selectOrderCount" resultType="int">
		select count(*) from tf_order where order_user_id = #{userId}
	</select>
	
</mapper>