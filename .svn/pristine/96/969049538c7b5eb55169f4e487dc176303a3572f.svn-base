package ticket.finder.controller;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import ticket.finder.dto.TfUser;
import ticket.finder.exception.QuestionNotFoundException;
import ticket.finder.service.CsService;
import ticket.finder.service.FaqService;
import ticket.finder.service.FcltyXService;
import ticket.finder.service.QuestionService;
import ticket.finder.service.RefundService;
import ticket.finder.service.ReviewService;
import ticket.finder.service.ShowXShowService;
import ticket.finder.service.TfOrderService;
import ticket.finder.service.TfUserService;

@Controller
public class AdminController {
	@Autowired
	private CsService scService;
	
	@Autowired
	private FaqService faqService;
	
	@Autowired
	private FcltyXService fcltyXService;
	
	@Autowired
	private QuestionService questionService;
	
	@Autowired
	private RefundService refundService;
	
	@Autowired
	private ReviewService reviewService;
	
	@Autowired
	private ShowXShowService showXShowService;
	
	@Autowired
	private TfOrderService tfOrderService;
	
	@Autowired
	private TfUserService tfUserService;
	
	
	@RequestMapping(value = "/main.admin", method = RequestMethod.GET)
	public String main() {
		return "admin/adm_main";
	}
	
	@RequestMapping(value = "/userlist.admin", method = RequestMethod.GET)
	public String userList(Model model) {
		model.addAttribute("userList", tfUserService.getUserList());
		return "admin/adm_user_list";
	}
	
	@RequestMapping(value = "/usermanage.admin", method = RequestMethod.GET)
	public String userManage(Model model) {
		model.addAttribute("dormantUserList", tfUserService.getDormantUserList());
		return "admin/adm_user_manage";
	}
	
	@RequestMapping(value = "/show.admin", method = RequestMethod.GET)
	public String show() {
		return "admin/adm_show_list";
	}
	
	@RequestMapping(value = "/deposit.admin", method = RequestMethod.GET)
	public String deposit() {
		return "admin/adm_deposit";
	}
	
	@RequestMapping(value = "/delivery.admin", method = RequestMethod.GET)
	public String delivery() {
		return "admin/adm_delivery";
	}
	
	@RequestMapping(value = "/ticketing.admin", method = RequestMethod.GET)
	public String ticketing() {
		return "admin/adm_ticketing";
	}
	
	@RequestMapping(value = "/order.admin", method = RequestMethod.GET)
	public String order() {
		return "admin/adm_order_list";
	}
	
	@RequestMapping(value = "/refund.admin", method = RequestMethod.GET)
	public String refund() {
		return "admin/adm_refund";
	}
	
	@RequestMapping(value = "/sttsshow.admin", method = RequestMethod.GET)
	public String sttsShow() {
		return "admin/adm_stts_show";
	}
	
	@RequestMapping(value = "/sttstheater.admin", method = RequestMethod.GET)
	public String sttsTheater() {
		return "admin/adm_stts_theater";
	}
	
	@RequestMapping(value = "/sttssales.admin", method = RequestMethod.GET)
	public String sttsSales() {
		return "admin/adm_stts_sales";
	}
	
	@RequestMapping(value = "/sttsticket.admin", method = RequestMethod.GET)
	public String sttsTicket() {
		return "admin/adm_stts_ticket";
	}
	
	@RequestMapping(value = "/review.admin", method = RequestMethod.GET)
	public String review() {
		return "admin/adm_review";
	}
	
	@RequestMapping(value = "/question.admin", method = RequestMethod.GET)
	public String question(Model model) {
		model.addAttribute("questionList", questionService.getQuestionList());
		return "admin/adm_question_oto";
	}
	
	@RequestMapping(value = "/questionreply.admin", method = RequestMethod.GET)
	public String questionReply(@RequestParam int num, Model model, HttpSession session) throws QuestionNotFoundException {
		TfUser tfUser=(TfUser)session.getAttribute("loginTfUser");
		model.addAttribute("question", questionService.getQuestion(num));
		return "admin/adm_question_oto_reply";
	}
	
	@RequestMapping(value = "/questionreply.admin", method = RequestMethod.POST)
	public String questionReply(String a) {
		return "admin/adm_question_oto_reply";
	}
	
	@RequestMapping(value = "/faqlist.admin", method = RequestMethod.GET)
	public String faqList() {
		return "admin/adm_faq_list";
	}
	
	@RequestMapping(value = "/faqadd.admin", method = RequestMethod.POST)
	public String faqAdd() {
		return "admin/adm_faq_add";
	}
}
